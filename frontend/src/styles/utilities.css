@utility clip-play {
  clip-path: polygon(20% 0%, 100% 50%, 20% 100%, 20% 50%);
}

@utility clip-play-first {
  clip-path: polygon(20% 0%, 100% 22%, 100% 78%, 20% 100%);
}

@utility clip-play-second {
  clip-path: polygon(0 22%, 100% 50%, 100% 50%, 0 78%);
}

@utility clip-stop {
  clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%);
}

@utility clip-check {
  clip-path: polygon(25% 40%, 41% 59%, 77% 27%, 83% 33%, 40% 73%, 18% 45%);
}

@utility clip-plus {
  clip-path: polygon(
    0 45%,
    45% 45%,
    45% 0,
    55% 0,
    55% 45%,
    100% 45%,
    100% 55%,
    55% 55%,
    55% 100%,
    45% 100%,
    45% 55%,
    0 55%
  );
}

@utility animation-paused {
  animation-play-state: paused;
}

@utility animation-running {
  animation-play-state: running;
}

@utility animation-reverse {
  animation-direction: reverse;
}

/* prettier-ignore */
@utility animation-duration-* {
  animation-duration: calc(--value(integer, [integer]) * 1ms);
  animation-duration: --value([*]);
}

@utility screen-reader-only {
  position: absolute;
  inset: 0;
  opacity: 0;
}

@utility grid-cols-auto-fill {
  grid-template-columns: repeat(auto-fill, minmax(0, 1fr));
}

@utility grid-cols-auto-fit {
  grid-template-columns: repeat(auto-fit, minmax(0, 1fr));
}

@utility inset-ring-l-* {
  box-shadow: inset calc(--value(integer) * 1.5px) 0 0 -1px var(--project-inset-ring-color);
}

@utility layout-base {
  display: grid;
  grid-template-columns: [full-width-start] 1rem [content-start] 1fr [content-end] 1rem [full-width-end];
  grid-auto-rows: auto;

  > * {
    grid-column: content;
    display: grid;
  }

  @media (width >= 64rem) {
    grid-template-columns:
      [full-width-start] 4rem [content-start] repeat(var(--content-cols, 1), 1fr)
      [content-end] 4rem [full-width-end];
  }
}

@utility layout-content {
  grid-column: content;
}

@utility layout-full-width {
  grid-column: full-width;
}

@utility layout-content-height {
  padding-block: 1rem;
}

@utility layout-full-height {
  padding-block: 0;
}

/* prettier-ignore */
@utility content-cols-* {
  --content-cols: --value(integer, [integer]);

  > * {
    grid-template-columns: subgrid;
  }
}

/* prettier-ignore */
@utility content-rows-* {
  grid-template-rows: repeat(--value(integer, [integer]), 1fr);
  grid-template-rows: --value([*]);
}

/* prettier-ignore */
@utility scrollbar-color-* {
  scrollbar-color: --value(--color-*) --modifier(--color-*, [color]);
}

@custom-variant is-open {
  &[data-open='true'],
  &:where([data-open='true'] *) {
    @slot;
  }
}

@custom-variant is-initial {
  &[data-initial='true'],
  &:where([data-initial='true'] *) {
    @slot;
  }
}

@custom-variant is-selected {
  &[data-selected='true'],
  &:where([data-selected='true'] *) {
    @slot;
  }
}
