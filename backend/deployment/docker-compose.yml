services:
  app:
    image: ${APP_IMAGE:-}
    command: sh -c 'bun migrate:db && bun dev'
    restart: unless-stopped
    container_name: backend
    env_file:
      - ${ENV_FILE:-.env}
    ports:
      - "${APP_PORT:-8080}:${APP_PORT:-8080}"
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    expose:
      - "${APP_PORT:-8080}"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 256M
    environment:
      - NODE_ENV=development
      - DEBUG=${DEBUG:-false}
    init: true
    develop:
      watch:
        - action: sync
          path: ../src
          target: /app/src
          ignore:
            - node_modules/
            - .git/
            - "**/*.test.ts"
        - action: sync+restart
          path: ../package.json
          target: /app/package.json
        - action: sync+restart
          path: ../bun.lockb
          target: /app/bun.lockb
    profiles:
      - dev
      - all

  db:
    image: postgres:16-alpine
    env_file:
      - ${ENV_FILE:-.env}
    ports:
      - "${POSTGRES_PORT:-5432}:${POSTGRES_PORT:-5432}"
    expose:
      - "${POSTGRES_PORT:-5432}"
    command: -p "${POSTGRES_PORT:-5432}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -p ${POSTGRES_PORT:-5432} -h ${POSTGRES_HOST}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    profiles:
      - dev
      - db
    shm_size: '256mb'

  elasticsearch:
    image: elasticsearch:9.0.1
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD:-changeme}
      - bootstrap.memory_lock=true
      - cluster.name=docker-cluster
      - logger.level=INFO
    ports:
      - "${ELASTICSEARCH_PORT:-9200}:9200"
    expose:
      - "${ELASTICSEARCH_PORT:-9200}"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep -q '\"status\":\"green\"\\|\"status\":\"yellow\"'"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          memory: 256M
    profiles:
      - dev
      - elastic
    init: true

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    ports:
      - "${MINIO_PORT:-9000}:${MINIO_PORT:-9000}"
      - "127.0.0.1:9001:9001"
    expose:
      - "${MINIO_PORT:-9000}"
      - "9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_BROWSER_REDIRECT_URL=${MINIO_BROWSER_REDIRECT_URL:-http://localhost:9001}
    volumes:
      - ./minio/data:/data
    healthcheck:
      test: ["CMD-SHELL", "mc alias set myminio http://localhost:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD} && mc admin info myminio"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    profiles:
      - dev
      - storage
    init: true

  createbuckets:
    image: minio/mc:latest
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add dev http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};
      /usr/bin/mc rm -r --force dev/${FILE_STORAGE_DEFAULT_BUCKET_NAME};
      /usr/bin/mc mb dev/${FILE_STORAGE_DEFAULT_BUCKET_NAME};
      /usr/bin/mc policy download dev/${FILE_STORAGE_DEFAULT_BUCKET_NAME};
      exit 0;
      "
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 128M
    restart: on-failure
    profiles:
      - dev
      - storage
    init: true

networks:
  default:
    name: ${APP_NAME:-backend}-network
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16

volumes:
  postgres_data:
    name: ${APP_NAME:-backend}-postgres-data
  elasticsearch_data:
    name: ${APP_NAME:-backend}-elasticsearch-data
